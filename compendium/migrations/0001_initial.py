# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-11-10 01:55
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Affinities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phys', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('gun', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('fire', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('ice', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('force', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('elec', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('light', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('dark', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('almighty', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('heal', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('ailment', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
                ('support', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9), django.core.validators.MinValueValidator(-9)])),
            ],
        ),
        migrations.CreateModel(
            name='Demon',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(1)])),
                ('race', models.CharField(choices=[(b'Deity', b'Deity'), (b'Amatsu', b'Amatsu'), (b'Megami', b'Megami'), (b'Nymph', b'Nymph'), (b'Enigma', b'Enigma'), (b'Entity', b'Entity'), (b'Primal', b'Primal'), (b'Fury', b'Fury'), (b'Kunitsu', b'Kunitsu'), (b'Kishin', b'Kishin'), (b'Zealot', b'Zealot'), (b'Lady', b'Lady'), (b'Reaper', b'Reaper'), (b'Vile', b'Vile'), (b'Tyrant', b'Tyrant'), (b'Genma', b'Genma'), (b'Yoma', b'Yoma'), (b'Fairy', b'Fairy'), (b'Night', b'Night'), (b'Herald', b'Herald'), (b'Divine', b'Divine'), (b'Fallen', b'Fallen'), (b'Avian', b'Avian'), (b'Flight', b'Flight'), (b'Raptor', b'Raptor'), (b'Jirae', b'Jirae'), (b'Brute', b'Brute'), (b'Femme', b'Femme'), (b'Jaki', b'Jaki'), (b'Dragon', b'Dragon'), (b'Snake', b'Snake'), (b'Drake', b'Drake'), (b'Avatar', b'Avatar'), (b'Holy', b'Holy'), (b'Food', b'Food'), (b'Beast', b'Beast'), (b'Wilder', b'Wilder'), (b'Tree', b'Tree'), (b'Wood', b'Wood'), (b'Ghost', b'Ghost'), (b'Spirit', b'Spirit'), (b'Undead', b'Undead'), (b'Vermin', b'Vermin'), (b'Foul', b'Foul'), (b'Element', b'Element'), (b'Fiend', b'Fiend'), (b'Famed', b'Famed')], max_length=10)),
                ('level_min', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(1)])),
                ('level_max', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'ordering': ('race', 'level'),
            },
        ),
        migrations.CreateModel(
            name='DemonFusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demon', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='compendium.Demon')),
                ('demon_1', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='fusion_1', to='compendium.Demon')),
                ('demon_2', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='fusion_2', to='compendium.Demon')),
            ],
        ),
        migrations.CreateModel(
            name='DemonSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(0)])),
                ('demon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compendium.Demon')),
            ],
            options={
                'ordering': ('demon',),
            },
        ),
        migrations.CreateModel(
            name='RaceFusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('race_1', models.CharField(choices=[(b'Deity', b'Deity'), (b'Amatsu', b'Amatsu'), (b'Megami', b'Megami'), (b'Nymph', b'Nymph'), (b'Enigma', b'Enigma'), (b'Entity', b'Entity'), (b'Primal', b'Primal'), (b'Fury', b'Fury'), (b'Kunitsu', b'Kunitsu'), (b'Kishin', b'Kishin'), (b'Zealot', b'Zealot'), (b'Lady', b'Lady'), (b'Reaper', b'Reaper'), (b'Vile', b'Vile'), (b'Tyrant', b'Tyrant'), (b'Genma', b'Genma'), (b'Yoma', b'Yoma'), (b'Fairy', b'Fairy'), (b'Night', b'Night'), (b'Herald', b'Herald'), (b'Divine', b'Divine'), (b'Fallen', b'Fallen'), (b'Avian', b'Avian'), (b'Flight', b'Flight'), (b'Raptor', b'Raptor'), (b'Jirae', b'Jirae'), (b'Brute', b'Brute'), (b'Femme', b'Femme'), (b'Jaki', b'Jaki'), (b'Dragon', b'Dragon'), (b'Snake', b'Snake'), (b'Drake', b'Drake'), (b'Avatar', b'Avatar'), (b'Holy', b'Holy'), (b'Food', b'Food'), (b'Beast', b'Beast'), (b'Wilder', b'Wilder'), (b'Tree', b'Tree'), (b'Wood', b'Wood'), (b'Ghost', b'Ghost'), (b'Spirit', b'Spirit'), (b'Undead', b'Undead'), (b'Vermin', b'Vermin'), (b'Foul', b'Foul'), (b'Element', b'Element'), (b'Fiend', b'Fiend'), (b'Famed', b'Famed')], max_length=10)),
                ('race_2', models.CharField(choices=[(b'Deity', b'Deity'), (b'Amatsu', b'Amatsu'), (b'Megami', b'Megami'), (b'Nymph', b'Nymph'), (b'Enigma', b'Enigma'), (b'Entity', b'Entity'), (b'Primal', b'Primal'), (b'Fury', b'Fury'), (b'Kunitsu', b'Kunitsu'), (b'Kishin', b'Kishin'), (b'Zealot', b'Zealot'), (b'Lady', b'Lady'), (b'Reaper', b'Reaper'), (b'Vile', b'Vile'), (b'Tyrant', b'Tyrant'), (b'Genma', b'Genma'), (b'Yoma', b'Yoma'), (b'Fairy', b'Fairy'), (b'Night', b'Night'), (b'Herald', b'Herald'), (b'Divine', b'Divine'), (b'Fallen', b'Fallen'), (b'Avian', b'Avian'), (b'Flight', b'Flight'), (b'Raptor', b'Raptor'), (b'Jirae', b'Jirae'), (b'Brute', b'Brute'), (b'Femme', b'Femme'), (b'Jaki', b'Jaki'), (b'Dragon', b'Dragon'), (b'Snake', b'Snake'), (b'Drake', b'Drake'), (b'Avatar', b'Avatar'), (b'Holy', b'Holy'), (b'Food', b'Food'), (b'Beast', b'Beast'), (b'Wilder', b'Wilder'), (b'Tree', b'Tree'), (b'Wood', b'Wood'), (b'Ghost', b'Ghost'), (b'Spirit', b'Spirit'), (b'Undead', b'Undead'), (b'Vermin', b'Vermin'), (b'Foul', b'Foul'), (b'Element', b'Element'), (b'Fiend', b'Fiend'), (b'Famed', b'Famed')], max_length=10)),
                ('race', models.CharField(choices=[(b'Deity', b'Deity'), (b'Amatsu', b'Amatsu'), (b'Megami', b'Megami'), (b'Nymph', b'Nymph'), (b'Enigma', b'Enigma'), (b'Entity', b'Entity'), (b'Primal', b'Primal'), (b'Fury', b'Fury'), (b'Kunitsu', b'Kunitsu'), (b'Kishin', b'Kishin'), (b'Zealot', b'Zealot'), (b'Lady', b'Lady'), (b'Reaper', b'Reaper'), (b'Vile', b'Vile'), (b'Tyrant', b'Tyrant'), (b'Genma', b'Genma'), (b'Yoma', b'Yoma'), (b'Fairy', b'Fairy'), (b'Night', b'Night'), (b'Herald', b'Herald'), (b'Divine', b'Divine'), (b'Fallen', b'Fallen'), (b'Avian', b'Avian'), (b'Flight', b'Flight'), (b'Raptor', b'Raptor'), (b'Jirae', b'Jirae'), (b'Brute', b'Brute'), (b'Femme', b'Femme'), (b'Jaki', b'Jaki'), (b'Dragon', b'Dragon'), (b'Snake', b'Snake'), (b'Drake', b'Drake'), (b'Avatar', b'Avatar'), (b'Holy', b'Holy'), (b'Food', b'Food'), (b'Beast', b'Beast'), (b'Wilder', b'Wilder'), (b'Tree', b'Tree'), (b'Wood', b'Wood'), (b'Ghost', b'Ghost'), (b'Spirit', b'Spirit'), (b'Undead', b'Undead'), (b'Vermin', b'Vermin'), (b'Foul', b'Foul'), (b'Element', b'Element'), (b'Fiend', b'Fiend'), (b'Famed', b'Famed')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Resistances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phys', models.CharField(choices=[(b'-', b'-'), (b'weak', b'weak'), (b'resist', b'resist'), (b'null', b'null'), (b'drain', b'drain'), (b'repel', b'repel')], default=b'-', max_length=10)),
                ('gun', models.CharField(choices=[(b'-', b'-'), (b'weak', b'weak'), (b'resist', b'resist'), (b'null', b'null'), (b'drain', b'drain'), (b'repel', b'repel')], default=b'-', max_length=10)),
                ('fire', models.CharField(choices=[(b'-', b'-'), (b'weak', b'weak'), (b'resist', b'resist'), (b'null', b'null'), (b'drain', b'drain'), (b'repel', b'repel')], default=b'-', max_length=10)),
                ('ice', models.CharField(choices=[(b'-', b'-'), (b'weak', b'weak'), (b'resist', b'resist'), (b'null', b'null'), (b'drain', b'drain'), (b'repel', b'repel')], default=b'-', max_length=10)),
                ('force', models.CharField(choices=[(b'-', b'-'), (b'weak', b'weak'), (b'resist', b'resist'), (b'null', b'null'), (b'drain', b'drain'), (b'repel', b'repel')], default=b'-', max_length=10)),
                ('elec', models.CharField(choices=[(b'-', b'-'), (b'weak', b'weak'), (b'resist', b'resist'), (b'null', b'null'), (b'drain', b'drain'), (b'repel', b'repel')], default=b'-', max_length=10)),
                ('light', models.CharField(choices=[(b'-', b'-'), (b'weak', b'weak'), (b'resist', b'resist'), (b'null', b'null'), (b'drain', b'drain'), (b'repel', b'repel')], default=b'-', max_length=10)),
                ('dark', models.CharField(choices=[(b'-', b'-'), (b'weak', b'weak'), (b'resist', b'resist'), (b'null', b'null'), (b'drain', b'drain'), (b'repel', b'repel')], default=b'-', max_length=10)),
                ('demon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='compendium.Demon')),
            ],
            options={
                'ordering': ('demon',),
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('affinity', models.CharField(choices=[(0, b'Passive'), (1, b'Phys'), (2, b'Gun'), (3, b'Fire'), (4, b'Ice'), (5, b'Force'), (6, b'Elec'), (7, b'Light'), (8, b'Dark'), (9, b'Almighty'), (10, b'Heal'), (11, b'Ailment'), (12, b'Support'), (13, b'Special')], default=b'passsive', max_length=10)),
                ('power', models.CharField(choices=[(0, b''), (1, b'Weak'), (2, b'Medium'), (3, b'Heavy'), (4, b'Severe')], default=b'', max_length=10)),
                ('hits', models.CharField(default=b'', max_length=10)),
                ('target', models.CharField(choices=[(0, b'Self'), (1, b'Single'), (2, b'Multi'), (3, b'All')], default=b'single', max_length=10)),
                ('cost', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('unique_cost', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('rank', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(31), django.core.validators.MinValueValidator(1)])),
                ('description', models.TextField()),
                ('demons', models.ManyToManyField(through='compendium.DemonSkill', to='compendium.Demon')),
            ],
            options={
                'ordering': ('affinity', 'rank'),
            },
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hp', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('mp', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('strength', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('dexterity', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('magic', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('agility', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('luck', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(999), django.core.validators.MinValueValidator(1)])),
                ('demon', models.OneToOneField(default=0, on_delete=django.db.models.deletion.CASCADE, to='compendium.Demon')),
            ],
            options={
                'ordering': ('demon',),
            },
        ),
        migrations.AddField(
            model_name='demonskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compendium.Skill'),
        ),
        migrations.AddField(
            model_name='affinities',
            name='demon',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='compendium.Demon'),
        ),
        migrations.AlterUniqueTogether(
            name='demonskill',
            unique_together=set([('demon', 'skill')]),
        ),
    ]
